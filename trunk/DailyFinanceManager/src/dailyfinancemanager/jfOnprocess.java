/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfOnprocess.java
 *
 * Created on Oct 30, 2010, 11:27:10 AM
 */

package dailyfinancemanager;

import DAO.ExcelFileHelper;
import DAO.ExcelTableModel;
import DAO.HHCTHourFunction;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.SwingWorker;

/**
 *
 * @author Buffet Cali
 */
public class jfOnprocess extends javax.swing.JFrame{
    /** Creates new form jfOnprocess */
    SwingWorker<Void, Void> m_UpdatePro;
    public jfOnprocess() {
        initComponents();
        m_UpdatePro = new UpdateProcess();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(356, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfOnprocess().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    void UpdatePro(String strNewText)
    {
        jLabel1.setText(strNewText);
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(jfOnprocess.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.invalidate();
    }

    public void DoFunction()
    {
        UpdateProcess up = new UpdateProcess();
        up.execute();
        //up.doInBackground();
    }

    

    class UpdateProcess extends SwingWorker<Void, Void>{

        @Override
        protected Void doInBackground() {
            //throw new UnsupportedOperationException("Not supported yet.");
            DoFunction();
            return null;
        }

        public String strUpdateText;

        public void DoFunction() {

            //---------------------------------------------------------
            //tao 1 thread

            //---------------------------------------------------------
            //lay danh sach file torng thu muc
            String[] strListFiles;
            //http://www.rgagnon.com/javadetails/java-0370.html
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            if (chooser.showDialog(null, null) == JFileChooser.CANCEL_OPTION)
            {
                //chooser.getCurrentDirectory();
                //this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                return;
            }

            strListFiles = chooser.getSelectedFile().list(new FilenameFilter() {

                public boolean accept(File file, String string) {
                    //throw new UnsupportedOperationException("Not supported yet.");

                    if((new File(file, string)).isDirectory()) return false;

                    if(!string.endsWith("xls")) return false;

                    return true;
                }
            });
            HHCTHourFunction bf = new HHCTHourFunction();

            for (int i = 0; i < strListFiles.length; i++) {
                ExcelTableModel tb = null;
                try {
                    // TODO add your handling code here:
                    tb = ExcelFileHelper.GetDataFromFile(chooser.getSelectedFile() + "\\" + strListFiles[i]);

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(jfTestExcelTableModel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(jfTestExcelTableModel.class.getName()).log(Level.SEVERE, null, ex);
                }

                //File f = new File(strListFiles[i]);
                String[] strSplitName = strListFiles[i].split(" ");
                bf.SetDate(strSplitName[strSplitName.length - 1].replaceAll(".xls", ""));
                bf.DoFunction(tb);

                //cap nhat process
                strUpdateText = strListFiles[i];
                UpdatePro(strUpdateText);
                //jTable1.setModel(bf.GetResult());
                //jLabel1.setText(chooser.getSelectedFile() + "\\" + strListFiles[i]);

                try {
                    ExcelFileHelper.SaveDataToFile(chooser.getSelectedFile() +  "\\kq" + String.valueOf(i) + ".xls", "Sheet1", bf.GetResult());
                } catch (IOException ex) {
                    Logger.getLogger(jfTestExcelTableModel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }
}


